/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    alpha1
    {
        solver           PCG;
        preconditioner   DIC;
        tolerance        1e-08;
        relTol           1e-04;
    }

    ".*(rho|rhoFinal)"
    {
        solver          diagonal;
    }
    
    p
    {
        solver          GAMG;
        tolerance       1e-06;
        relTol          0;
        minIter         1;
        maxIter         1000;
        smoother        GaussSeidel;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        scaleCorrection true;
        directSolveCoarsest false;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 20;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    cellMotionU
    {
        solver          GAMG;
        tolerance       1e-06;
        relTol          0.001;
        minIter         1;
        maxIter         100;
        smoother        GaussSeidel;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        scaleCorrection true;
        directSolveCoarsest false;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 20;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    U
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-06;
        relTol          0;
        minIter         1;
    }
}

PISO
{
    cAlpha          4;
    momentumPredictor no;
    transSonic      no;
    nAlphaCorr      1;
    nAlphaSubCycles 1;
    correctBubbleMass no; //keeps bubble mass constant, except for the factor pfact at the first Vmax
    correctPsi 0.0; //0 is off, corrects via psi_i = alpha_i^correctPsi * psi_i
    limitAlpha 0.9; //0 is off, > 0 anything above limitAlpha gets set to 1, anything below 1-limitAlpha gets set to 0
    secondBubble 0.0;
}

// ************************************************************************* //
